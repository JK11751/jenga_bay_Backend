 instructions on how to run the backend server:
 
    open the project folder in vs code or cmd terminal on your local machine
    if you are using vscode open the vscode terminal
    run this command to install a virtual environment:
      $ virtualenv venv

    then activate the virtual environment from the directory you have installed the venv, in our case the current directory
      $ . venv/bin/activate (for Linux)
      $ . venv/scripts/activate (for Windows OS)

    run the following command to install django in your virtual environment
      $ pip install django (might say requirement satisfied)
      
    run the following command to install rest framework
      $ pip install djangorestframework
      
    run the following command to install cors-headers
      $ python -m pip install django-cors-headers

    New!!:
    run the following command to install authentication packages
      $ pip install django-rest-auth
      $ pip install django-all-auth
      $ pip install django-allauth
      $ pip install django-rest-passwordreset

      remember to run migrations as below after installing them
      
    next run the commands below to migrate models to the database
      $ python manage.py makemigrations
      $ python manage.py migrate
    
    
    next command will run the server
      $ python manage.py runserver
      
    access the api endpoints from:

    Authentication and password reset:
    http://localhost:8000/login (to login a user)
    http://localhost:8000/accounts/logout/ (to logout a user)

    http://localhost:8000/accounts/password_reset/ (to get a password reset token)

    Now post token and password to:
    accounts/password_reset/confirm/
    eg. as:
      {
        "token":"3339e80fe05e5ca9fc74799213f81a093d1f",
        "password":"Password@123"
      }

    In Response you will get:

      {
        "status": "OK"
      }

    other apis:
    http://localhost:8000/create_seller_account (to create a seller account)
    http://localhost:8000/sellers   (get all registered sellers)
    http://localhost:8000/sellers/seller-id (to get a specific seller)
    http://localhost:8000/sellers/seller-id/profile  (to get, update or delete a specific seller)
    http://localhost:8000/items  (api end point for all items in the database)
    http://localhost:8000/items/item_id   (api end point to view a specific item)
    http://localhost:8000/sellers/seller-id/items/add_item  (where a seller can add an item to their shop)
    http://localhost:8000/sellers/seller-id/items   (to get all items belonging to a specific seller)
    http://localhost:8000/sellers/seller-id/items/item_id   (to get, update and delete a specific item belonging to a specific seller)
    http://localhost:8000/create_buyer (create a new buyer account)
    http://localhost:8000/buyers/buyer_id/profile (retreive, update and delete a buyer account)
    http://localhost:8000/buyers/buyer_id (view a specific buyer)
    http://localhost:8000/submit_order (create an order)
    http://localhost:8000/sellers/sellr_id/orders (view all orders related to a specific seller)
    http://localhost:8000/sellers/seller_id/orders/order_id (seller and a buyer can view a specific order in which they are both involved)
    http://localhost:8000/sellers/seller_id/orders/order_id/edit (seller can view, update or delete a specific order)

    to view items belonging to a certain category append a query parameter to the url as shown below:
      e.g:
            http://localhost:8000/items?category=paints
            http://localhost:8000/sellers/seller-id/items?category=paints

    to view search for based on any query string, append a query parameter with a 'search' keyword to the url as shown below:
      e.g:
            http://localhost:8000/items?search=jengabay
            http://localhost:8000/sellers/seller-id/items?search=cement
            
